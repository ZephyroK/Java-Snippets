
package addressing.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WsAddressing", targetNamespace = "http://service.addressing/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WsAddressing {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "someOperation", targetNamespace = "http://service.addressing/", className = "addressing.client.SomeOperation")
    @ResponseWrapper(localName = "someOperationResponse", targetNamespace = "http://service.addressing/", className = "addressing.client.SomeOperationResponse")
    @Action(input = "http://WsAddressing/importantTransactionRequest", output = "http://WsAddressing/importantTransactionResponse")
    public String someOperation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws SomeOperationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "anotherOperation", targetNamespace = "http://service.addressing/", className = "addressing.client.AnotherOperation")
    @ResponseWrapper(localName = "anotherOperationResponse", targetNamespace = "http://service.addressing/", className = "addressing.client.AnotherOperationResponse")
    @Action(input = "http://WsAddressing/anotherOperationRequest", output = "http://WsAddressing/anotherOperationResponse", fault = {
        @FaultAction(className = SomeOperationException_Exception.class, value = "http://WsAddressing/somethingWentWrong")
    })
    public String anotherOperation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1)
        throws SomeOperationException_Exception
    ;

}
