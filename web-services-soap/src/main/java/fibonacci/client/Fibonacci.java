
package fibonacci.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Fibonacci", targetNamespace = "http://service.fibonacci/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Fibonacci {


    /**
     * 
     * @param arg0
     * @return
     *     returns int
     * @throws FibException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateFibonacci", targetNamespace = "http://service.fibonacci/", className = "fibonacci.client.CalculateFibonacci")
    @ResponseWrapper(localName = "calculateFibonacciResponse", targetNamespace = "http://service.fibonacci/", className = "fibonacci.client.CalculateFibonacciResponse")
    @Action(input = "http://service.fibonacci/Fibonacci/calculateFibonacciRequest", output = "http://service.fibonacci/Fibonacci/calculateFibonacciResponse", fault = {
        @FaultAction(className = FibException_Exception.class, value = "http://service.fibonacci/Fibonacci/calculateFibonacci/Fault/FibException")
    })
    public int calculateFibonacci(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws FibException_Exception
    ;

}
